kind: Workflow
metadata:
  generateName: builder
spec:
  entrypoint: reduce-global
  volumes:
  - name: volv
    persistentVolumeClaim:
      claimName: res-volume
  
  templates:

  - name: reduce-global
    retryStrategy:
        limit: "3"
        backoff:
            duration: "3m"      
            factor: "2"
            maxDuration: "10m"
    script:
      image: python:alpine3.6
      volumeMounts:
      - name: volv
        mountPath: /mnt/vol
      command: [python]
      source: |
        import glob
        import json
        jlist = glob.glob('/mnt/vol/*.json')
        print("jsonlist:")
        print(jlist)
        final = []
        for r in jlist:
          if '*' not in r:
            continue
          with open(r, 'r') as f:
            res = json.load(f)
          canonicalName = r.split('/')[-1]
          jsondict = {}
          jsondict['toolchain'] = canonicalName.split('*')[0]
          jsondict['framework'] = canonicalName.split('*')[1]
          jsondict['commit'] = canonicalName.split('*')[2]
          jsondict['optlvl'] = canonicalName.split('*')[3]
          jsondict['compiler'] = canonicalName.split('*')[4]
          jsondict['results'] = res
          final.append(res)
        with open('/mnt/vol/finalres.json', 'w') as f: 
          json.dump(final, f)
        
    outputs:
      artifacts:
      - name: results
        path: /mnt/vol/finalres.json
  